{"ast":null,"code":"var _jsxFileName = \"E:\\\\frontEnd-Mod4\\\\dictionary-app\\\\src\\\\components\\\\WorddetailsPage.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WordDetailsPage = () => {\n  _s();\n  const {\n    word\n  } = useParams();\n  const wordData = useSelector(state => state.wordData);\n\n  // Find the word data based on the selected word\n  const selectedWorddata = wordData.find(data => data.word === word);\n  // const selectedWorddata = wordData.filter((data) => data.word === word)[0];\n  if (!selectedWorddata) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Word not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wordinfo\",\n      children: wordData && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\" \", wordData.word]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", wordData.phonetic]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), wordData.phonetics.map((phonetic, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"audio\", {\n            controls: true,\n            children: [/*#__PURE__*/_jsxDEV(\"source\", {\n              src: phonetic.audio,\n              type: \"audio/mpeg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this), \"Your browser does not support the audio element.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)), wordData.meanings.map((meaning, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\" \", meaning.partOfSpeech]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: meaning.definitions.map((definition, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\" \", definition.definition]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 21\n              }, this), definition.synonyms && definition.synonyms.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\" \", definition.synonyms.join(', ')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 23\n              }, this), definition.antonyms && definition.antonyms.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\" \", definition.antonyms.join(', ')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(WordDetailsPage, \"aN2W3E7NwFXlxoUcGtBq/8KE0S0=\", false, function () {\n  return [useParams, useSelector];\n});\n_c = WordDetailsPage;\nexport default WordDetailsPage;\nvar _c;\n$RefreshReg$(_c, \"WordDetailsPage\");","map":{"version":3,"names":["React","useParams","useSelector","jsxDEV","_jsxDEV","WordDetailsPage","_s","word","wordData","state","selectedWorddata","find","data","children","fileName","_jsxFileName","lineNumber","columnNumber","className","phonetic","phonetics","map","index","controls","src","audio","type","meanings","meaning","partOfSpeech","definitions","definition","synonyms","length","join","antonyms","_c","$RefreshReg$"],"sources":["E:/frontEnd-Mod4/dictionary-app/src/components/WorddetailsPage.js"],"sourcesContent":["import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst WordDetailsPage = ()=>{\r\n    const {word} = useParams();\r\n    const wordData = useSelector((state)=>state.wordData);\r\n\r\n    // Find the word data based on the selected word\r\n    const selectedWorddata = wordData.find((data) => data.word === word);\r\n    // const selectedWorddata = wordData.filter((data) => data.word === word)[0];\r\n    if (!selectedWorddata) {\r\n        return <div>\r\n            Word not found\r\n        </div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* <h1>Word Details for {selectedWorddata.word}</h1>\r\n            <p>Phonetic: {}selectedWorddata.phonetic</p>\r\n            <h2>Phonetics</h2>\r\n            <ul>\r\n                {selectedWorddata.phonetics.map((phonetic, index) => (\r\n                    <li key={index}>\r\n                        {phonetic.text} - {' '}\r\n                        <audio controls>\r\n                            <source src={phonetic.audio} type=\"audio/mpeg\"/>\r\n                            Your browser does not support the audio element.\r\n                        </audio>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n\r\n            <h2>Meanings</h2>\r\n             {selectedWorddata.meanings.map((meaning, index) => (\r\n            <div key={index}>\r\n                 <h3>Part of Speech: {meaning.partOfSpeech}</h3>\r\n                <ul>\r\n                 {meaning.definitions.map((definition, index) => (\r\n                     <li key={index}>\r\n                     <p>Definition: {definition.definition}</p>\r\n                    {definition.synonyms && definition.synonyms.length > 0 && (\r\n                      <p>Synonyms: {definition.synonyms.join(', ')}</p>\r\n                      )}\r\n                     {definition.antonyms && definition.antonyms.length > 0 && (\r\n                     <p>Antonyms: {definition.antonyms.join(', ')}</p>\r\n                     )}\r\n                     {definition.example && (\r\n                      <p>Example: {definition.example}</p>\r\n                    )}\r\n                  </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n      ))} */}\r\n\r\n\r\n<div className='wordinfo'>\r\n      {wordData && (\r\n          <div>\r\n          {/* <h2>Search Results for \"{searchWord}\"</h2> */}\r\n          <h3> {wordData.word}</h3>\r\n          <p> {wordData.phonetic}</p>\r\n            {wordData.phonetics.map((phonetic, index) => (\r\n              <div key={index}>\r\n                 \r\n                <audio controls>\r\n                  <source src={phonetic.audio} type=\"audio/mpeg\" />\r\n                  Your browser does not support the audio element.\r\n                </audio>\r\n              </div>\r\n            ))}\r\n          \r\n          {wordData.meanings.map((meaning, index) => (\r\n            <div key={index}>\r\n              <h3> {meaning.partOfSpeech}</h3>\r\n              <ul>\r\n                {meaning.definitions.map((definition, index) => (\r\n                  <li key={index}>\r\n                    <p> {definition.definition}</p>\r\n                    {definition.synonyms && definition.synonyms.length > 0 && (\r\n                      <p> {definition.synonyms.join(', ')}</p>\r\n                    )}\r\n                    {definition.antonyms && definition.antonyms.length > 0 && (\r\n                      <p> {definition.antonyms.join(', ')}</p>\r\n                    )}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          ))}\r\n\r\n        </div>\r\n      )}\r\n      </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default WordDetailsPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}