{"ast":null,"code":"var _jsxFileName = \"E:\\\\frontEnd-Mod4\\\\dictionary-app\\\\src\\\\components\\\\HomePage.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import {AddToHistory}  from '../ReduxFile/actions/HistoryActions';\n// import  {fetchWordData} from '../ReduxFile/actions/WordActions';\n// // import WordDetailsPage from './WorddetailsPage';\n\n// const HomePage = ()=>{\n//     const [searchWord, setSearchWord] = useState('');\n//     const dispatch = useDispatch();\n//     // const wordData = useSelector((state)=>state.wordData);\n\n//     const handleSearch = () => {\n//         if(searchWord.trim() !== ''){\n//             dispatch(fetchWordData(searchWord));\n//             dispatch(AddToHistory(searchWord));\n//             setSearchWord(\"\");\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <input \n//                 type='text'\n//             placeholder='Enter a word'\n//             value={searchWord}\n//             onChange={(e) => setSearchWord(e.target.value)}\n//             />\n//             <button\n//                 onClick={handleSearch}\n//             >search</button>\n\n//             {searchWord && searchWord.length > 0 && (\n//                 <div>\n//                     <h2>Search Results For \"{searchWord}\"</h2> \n//                     {searchWord.map((wordInfo, index)=> (\n//                         <div key={index}>\n//                             <h3>{wordInfo.word}</h3>\n//                             <p>Phonetic: {wordInfo.phonetic}</p>\n//                             </div>\n//                     ))}\n//                 </div>\n//             )}\n\n//         </div>\n//     );\n// };\n\n// export default HomePage;\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [searchWord, setSearchWord] = useState('');\n  const [wordData, setWordData] = useState(null);\n  const handleSearch = async () => {\n    if (searchWord.trim() !== '') {\n      try {\n        const response = await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${searchWord}`);\n        if (response.ok) {\n          const data = await response.json();\n          setWordData(data[0]); // Assuming the API response is an array with one object\n        } else {\n          setWordData(null);\n        }\n      } catch (error) {\n        console.error('Error fetching word data:', error);\n        setWordData(null);\n      }\n    }\n  };\n  useEffect(() => {\n    if (wordData) {\n      console.log('Word data:', wordData); // You can log the data for further inspection\n    }\n  }, [wordData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dictionary App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter a word\",\n      value: searchWord,\n      onChange: e => setSearchWord(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), wordData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Search Results for \\\"\", searchWord, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Word: \", wordData.word]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Phonetic: \", wordData.phonetic]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), wordData.meanings.map((meaning, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Part of Speech: \", meaning.partOfSpeech]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: meaning.definitions.map((definition, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Definition: \", definition.definition]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 21\n            }, this), definition.synonyms && definition.synonyms.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Synonyms: \", definition.synonyms.join(', ')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 23\n            }, this), definition.antonyms && definition.antonyms.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Antonyms: \", definition.antonyms.join(', ')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 23\n            }, this), definition.example && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Example: \", definition.example]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)), wordData.phonetics.map((phonetic, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Phonetic Text: \", phonetic.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          children: [/*#__PURE__*/_jsxDEV(\"source\", {\n            src: phonetic.audio,\n            type: \"audio/mpeg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this), \"Your browser does not support the audio element.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"O4CBoXBg9oBv2rGZN3bY6QuqDek=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","HomePage","_s","searchWord","setSearchWord","wordData","setWordData","handleSearch","trim","response","fetch","ok","data","json","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","word","phonetic","meanings","map","meaning","index","partOfSpeech","definitions","definition","synonyms","length","join","antonyms","example","phonetics","text","controls","src","audio","_c","$RefreshReg$"],"sources":["E:/frontEnd-Mod4/dictionary-app/src/components/HomePage.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import {AddToHistory}  from '../ReduxFile/actions/HistoryActions';\r\n// import  {fetchWordData} from '../ReduxFile/actions/WordActions';\r\n// // import WordDetailsPage from './WorddetailsPage';\r\n\r\n\r\n// const HomePage = ()=>{\r\n//     const [searchWord, setSearchWord] = useState('');\r\n//     const dispatch = useDispatch();\r\n//     // const wordData = useSelector((state)=>state.wordData);\r\n\r\n//     const handleSearch = () => {\r\n//         if(searchWord.trim() !== ''){\r\n//             dispatch(fetchWordData(searchWord));\r\n//             dispatch(AddToHistory(searchWord));\r\n//             setSearchWord(\"\");\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <input \r\n//                 type='text'\r\n//             placeholder='Enter a word'\r\n//             value={searchWord}\r\n//             onChange={(e) => setSearchWord(e.target.value)}\r\n//             />\r\n//             <button\r\n//                 onClick={handleSearch}\r\n//             >search</button>\r\n\r\n//             {searchWord && searchWord.length > 0 && (\r\n//                 <div>\r\n//                     <h2>Search Results For \"{searchWord}\"</h2> \r\n//                     {searchWord.map((wordInfo, index)=> (\r\n//                         <div key={index}>\r\n//                             <h3>{wordInfo.word}</h3>\r\n//                             <p>Phonetic: {wordInfo.phonetic}</p>\r\n//                             </div>\r\n//                     ))}\r\n//                 </div>\r\n//             )}\r\n            \r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default HomePage;\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst HomePage = () => {\r\n  const [searchWord, setSearchWord] = useState('');\r\n  const [wordData, setWordData] = useState(null);\r\n\r\n  const handleSearch = async () => {\r\n    if (searchWord.trim() !== '') {\r\n      try {\r\n        const response = await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${searchWord}`);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setWordData(data[0]); // Assuming the API response is an array with one object\r\n        } else {\r\n          setWordData(null);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching word data:', error);\r\n        setWordData(null);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (wordData) {\r\n      console.log('Word data:', wordData); // You can log the data for further inspection\r\n    }\r\n  }, [wordData]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Dictionary App</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter a word\"\r\n        value={searchWord}\r\n        onChange={(e) => setSearchWord(e.target.value)}\r\n      />\r\n      <button onClick={handleSearch}>Search</button>\r\n\r\n      {wordData && (\r\n        <div>\r\n          <h2>Search Results for \"{searchWord}\"</h2>\r\n          <p>Word: {wordData.word}</p>\r\n          <p>Phonetic: {wordData.phonetic}</p>\r\n          \r\n          {wordData.meanings.map((meaning, index) => (\r\n            <div key={index}>\r\n              <h3>Part of Speech: {meaning.partOfSpeech}</h3>\r\n              <ul>\r\n                {meaning.definitions.map((definition, index) => (\r\n                  <li key={index}>\r\n                    <p>Definition: {definition.definition}</p>\r\n                    {definition.synonyms && definition.synonyms.length > 0 && (\r\n                      <p>Synonyms: {definition.synonyms.join(', ')}</p>\r\n                    )}\r\n                    {definition.antonyms && definition.antonyms.length > 0 && (\r\n                      <p>Antonyms: {definition.antonyms.join(', ')}</p>\r\n                    )}\r\n                    {definition.example && (\r\n                      <p>Example: {definition.example}</p>\r\n                    )}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          ))}\r\n\r\n          {wordData.phonetics.map((phonetic, index) => (\r\n            <div key={index}>\r\n              <p>Phonetic Text: {phonetic.text}</p>\r\n              <audio controls>\r\n                <source src={phonetic.audio} type=\"audio/mpeg\" />\r\n                Your browser does not support the audio element.\r\n              </audio>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}