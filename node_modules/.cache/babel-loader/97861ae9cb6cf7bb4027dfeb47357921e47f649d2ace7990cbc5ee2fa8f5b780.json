{"ast":null,"code":"import axios from \"axios\";\n\n// Action TYPE\nexport const FETCH_WORD_REQUEST = 'FETCH_WORD_REQUEST';\nexport const FETCH_WORD_SUSSESS = 'FETCH_WORD_SUCCESS';\nexport const FETCH_WORD_FAILURE = 'FETCH_WORD_FAILURE';\n\n// Achtion Creators\nexport const fetchWordRequest = () => ({\n  type: FETCH_WORD_REQUEST\n});\nexport const fetchWordSuccess = wordData => ({\n  type: FETCH_WORD_SUSSESS\n});\nexport const fetchWordfailure = error => ({\n  type: FETCH_WORD_FAILURE\n});\n\n// Async Action Creator for fetching word data\nexport const fetchWordData = word => {\n  return dispatch => {\n    dispatch(fetchWordRequest());\n    axios.get(`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`).then(Response => {\n      const wordData = Response.data;\n      dispatch(fetchWordSuccess(wordData));\n    }).catch(error => {\n      dispatch(fetchWordfailure(error.message));\n    });\n  };\n};","map":{"version":3,"names":["axios","FETCH_WORD_REQUEST","FETCH_WORD_SUSSESS","FETCH_WORD_FAILURE","fetchWordRequest","type","fetchWordSuccess","wordData","fetchWordfailure","error","fetchWordData","word","dispatch","get","then","Response","data","catch","message"],"sources":["E:/frontEnd-Mod4/dictionary-app/src/ReduxFile/actions/WordActions.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// Action TYPE\r\nexport const FETCH_WORD_REQUEST ='FETCH_WORD_REQUEST';\r\nexport const FETCH_WORD_SUSSESS ='FETCH_WORD_SUCCESS';\r\nexport const FETCH_WORD_FAILURE ='FETCH_WORD_FAILURE';\r\n\r\n// Achtion Creators\r\nexport const fetchWordRequest = () => ({\r\n    type: FETCH_WORD_REQUEST,\r\n});\r\nexport const fetchWordSuccess = (wordData) => ({\r\n    type: FETCH_WORD_SUSSESS,\r\n});\r\nexport const fetchWordfailure = (error) => ({\r\n    type: FETCH_WORD_FAILURE,\r\n});\r\n\r\n// Async Action Creator for fetching word data\r\nexport const fetchWordData = (word) => {\r\n    return (dispatch) => {\r\n        dispatch(fetchWordRequest());\r\n        axios.get(`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`)\r\n        .then((Response) => {\r\n            const wordData = Response.data;\r\n            dispatch(fetchWordSuccess(wordData));\r\n        })\r\n        .catch((error) => {\r\n            dispatch(fetchWordfailure(error.message))\r\n        });\r\n    }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,MAAMC,kBAAkB,GAAE,oBAAoB;AACrD,OAAO,MAAMC,kBAAkB,GAAE,oBAAoB;AACrD,OAAO,MAAMC,kBAAkB,GAAE,oBAAoB;;AAErD;AACA,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,MAAO;EACnCC,IAAI,EAAEJ;AACV,CAAC,CAAC;AACF,OAAO,MAAMK,gBAAgB,GAAIC,QAAQ,KAAM;EAC3CF,IAAI,EAAEH;AACV,CAAC,CAAC;AACF,OAAO,MAAMM,gBAAgB,GAAIC,KAAK,KAAM;EACxCJ,IAAI,EAAEF;AACV,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMO,aAAa,GAAIC,IAAI,IAAK;EACnC,OAAQC,QAAQ,IAAK;IACjBA,QAAQ,CAACR,gBAAgB,CAAC,CAAC,CAAC;IAC5BJ,KAAK,CAACa,GAAG,CAAE,mDAAkDF,IAAK,EAAC,CAAC,CACnEG,IAAI,CAAEC,QAAQ,IAAK;MAChB,MAAMR,QAAQ,GAAGQ,QAAQ,CAACC,IAAI;MAC9BJ,QAAQ,CAACN,gBAAgB,CAACC,QAAQ,CAAC,CAAC;IACxC,CAAC,CAAC,CACDU,KAAK,CAAER,KAAK,IAAK;MACdG,QAAQ,CAACJ,gBAAgB,CAACC,KAAK,CAACS,OAAO,CAAC,CAAC;IAC7C,CAAC,CAAC;EACN,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}